{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","categories","setCategories","limit","setLimit","useState","inputValue","setInputValue","onSubmit","e","preventDefault","myValue","trim","length","includes","cats","value","type","onChange","target","defaultValue","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","original","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAMaA,EAAc,SAAC,GAAqD,IAAlDC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAEtCC,mBAAS,IAF6B,mBAEpEC,EAFoE,KAExDC,EAFwD,KAmC5E,OACI,0BAAMC,SAfS,SAACC,GAChBA,EAAEC,iBAEF,IAAIC,EAAUL,EAAWM,OAErBD,EAAQE,OAAS,IAEZZ,EAAWa,SAASH,IACrBT,GAAe,SAAAa,GAAI,OAAKJ,GAAL,mBAAiBI,OAExCR,EAAc,OAMd,2BACIS,MAAQV,EACRW,KAAK,OACLC,SAjCQ,SAACT,GACjBF,EAAcE,EAAEU,OAAOH,UAkCnB,4BACII,aAAejB,EACfe,SA9BS,SAACT,GAClBL,EAASK,EAAEU,OAAOH,SA8BN,qCACA,sCACA,yC,uBCrDPK,EAAO,uCAAG,WAAQC,EAAUnB,GAAlB,uBAAAoB,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,kBAEmEnB,EAFnE,sDAGAuB,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,SAASZ,QAVf,kBAcZM,GAdY,4CAAH,wDCMPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHJO,EAAU,SAAC,GAA2B,IAAxBnB,EAAuB,EAAvBA,SAAuB,ECFtB,SAAEA,EAAUnB,GAAY,IAAD,EAEnBE,mBAAS,CACjCwB,KAAM,GACNa,SAAS,IAJkC,mBAEvCC,EAFuC,KAEhCC,EAFgC,KAuB/C,OAhBAC,qBAAW,WACNxB,EAASC,EAAUnB,GACd2C,MAAM,SAAAd,GAAG,OAEPe,YAAW,WACPH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAId,UAGZ,CAAEpB,IAEEqB,EDnB0BK,CAAc1B,EAFD,EAAbnB,OAEpBgC,EAFiC,EAEtCN,KAAaa,EAFyB,EAEzBA,QAErB,OACI,oCACI,4BAAMpB,GAEFoB,GAAW,2BAAG,yBAAKH,IAAI,sBAAsBC,IAAI,gBAErD,yBAAKF,UAAU,iEAEXH,EAAOJ,KAAK,SAAAC,GAAG,OAEP,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEjBpBkB,EAAe,WAAO,IAAD,EAEQ7C,mBAAU,CAAC,SAFnB,mBAEtBJ,EAFsB,KAEVC,EAFU,OAIFG,mBAAU,IAJR,mBAItBF,EAJsB,KAIfC,EAJe,KAM9B,OACI,oCACI,wBAAIkC,UAAU,qCAAd,6BAGA,yHAGA,kBAAC,EAAD,CACIrC,WAAaA,EAAaC,cAAgBA,EAC1CC,MAAQA,EAAQC,SAAWA,IAE/B,6BACA,iCAEIH,EAAW8B,KAAK,SAAAT,GACZ,OAAO,kBAAC,EAAD,CAAS2B,IAAM3B,EAAWA,SAAWA,EAAWnB,MAAQA,U,MCjBnFgD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.22457972.chunk.js","sourcesContent":["// -----------------------------------------------------------\r\n// React libreries\r\n// -----------------------------------------------------------\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { categories, setCategories, limit, setLimit }) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState('');\r\n    \r\n    // ----------------------\r\n    // Button onChange method\r\n    // ----------------------\r\n    const handleInput = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    // ----------------------\r\n    // Select onChange method\r\n    // ----------------------\r\n    const handleSelect = (e) =>{\r\n        setLimit(e.target.value);\r\n    }\r\n\r\n    // --------------------\r\n    // Form onSubmit method\r\n    // --------------------\r\n    const handleForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        let myValue = inputValue.trim();\r\n\r\n        if( myValue.length > 2 ){\r\n\r\n            if( !categories.includes(myValue) ){\r\n                setCategories( cats => [myValue, ...cats] );\r\n            }\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleForm }>\r\n            <input \r\n                value={ inputValue } \r\n                type=\"text\"\r\n                onChange={ handleInput }\r\n            />\r\n            <select\r\n                defaultValue={ limit } \r\n                onChange={ handleSelect }>\r\n                    <option>5</option>\r\n                    <option>10</option>\r\n                    <option>20</option>\r\n            </select>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n}","export const getGifs = async ( category, limit ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=${ limit }&api_key=fTnz2X7pOMy4HP6Une2FYNC288sLg00n`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.original.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","// -----------------------------------------------------------\r\n// React libreries\r\n// -----------------------------------------------------------\r\nimport React from 'react'\r\n// -----------------------------------------------------------\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n         </div>\r\n    )\r\n}","// -----------------------------------------------------------\r\n// React libreries\r\n// -----------------------------------------------------------\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n// -----------------------------------------------------------\r\n\r\nexport const GifGrid = ( { category, limit } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category, limit );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {\r\n                loading && <p><img src=\"/assets/loading.gif\" alt=\"Loading...\" /></p>\r\n            }\r\n            <div className=\"card-grid animate__animated animate__fadeIn animate__delay-1s\">\r\n            {\r\n                images.map( img => \r\n                    (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    )\r\n                )\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}","// -----------------------------------------------------------\r\n// React libreries\r\n// -----------------------------------------------------------\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category, limit ) => {\r\n\r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n         getGifs( category, limit )\r\n             .then( img => \r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                        }\r\n                    ) \r\n\r\n                }, 200)\r\n\r\n             )\r\n    }, [ category ]);    \r\n\r\n    return state; // { data: [], loading: true }\r\n\r\n}","// -----------------------------------------------------------\r\n// React libreries\r\n// -----------------------------------------------------------\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [ categories, setCategories ] = useState( ['Kiwi'] );\r\n\r\n    const [ limit, setLimit ] = useState( 10 );\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__fadeIn\">\r\n                First \"React\" application\r\n            </h2>\r\n            <p>\r\n                Please enter any word. I'm going to make a fetch to Giphy API and get some images for you.\r\n            </p>\r\n            <AddCategory \r\n                categories={ categories } setCategories={ setCategories } \r\n                limit={ limit } setLimit={ setLimit } \r\n            />\r\n            <hr />\r\n            <section>\r\n            {\r\n                categories.map( category => {\r\n                    return <GifGrid key={ category } category={ category } limit={ limit } />\r\n                })\r\n            }\r\n            </section>\r\n        </>\r\n    )\r\n}","// -----------------------------\r\n// React libreries\r\n// -----------------------------\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { GifExpertApp } from './components/GifExpertApp';\r\n// -----------------------------\r\n// Assets\r\n// -----------------------------\r\nimport './mystyle.css';\r\n\r\nReactDOM.render(\r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}